#BlueJ class context
comment0.target=SimpleArrayList
comment0.text=\r\n\ A\ simple\ list\ implementation\ backed\ by\ an\ array.\ Supports\ a\ subset\ of\ the\r\n\ operations\ in\ the\ full\ List\ interface\ (the\ most\ important\ ones).\ Dynamically\r\n\ resizes\ (recreates)\ the\ array\ to\ avoid\ running\ out\ of\ room.\r\n\ \r\n\ @author\ Sean\ Barker\r\n\ @param\ <T>\r\n\ \ \ \ \ \ \ \ \ \ The\ type\ of\ data\ held\ in\ the\ list.\r\n
comment1.params=startingCapacity
comment1.target=SimpleArrayList(int)
comment1.text=\r\n\ Construct\ a\ new\ list\ with\ the\ given\ starting\ capacity.\r\n\ \r\n\ @param\ startingCapacity\r\n\ \ \ \ \ \ \ \ \ \ The\ desired\ starting\ list\ capacity.\r\n
comment10.params=index
comment10.target=java.lang.Object\ remove(int)
comment11.params=obj
comment11.target=boolean\ contains(java.lang.Object)
comment12.params=
comment12.target=java.lang.String\ toString()
comment2.params=
comment2.target=SimpleArrayList()
comment2.text=\r\n\ Construct\ a\ new\ list\ with\ the\ default\ starting\ capacity.\r\n
comment3.params=minCapacity
comment3.target=void\ ensureCapacity(int)
comment3.text=\r\n\ Ensure\ that\ the\ internal\ array\ has\ at\ least\ minCapacity\ size.\ Creates\ a\ new\r\n\ array\ and\ copies\ over\ the\ existing\ elements\ if\ the\ current\ capacity\ is\ less\r\n\ than\ minCapacity.\r\n\ \r\n\ @param\ minCapacity\r\n\ \ \ \ \ \ \ \ \ \ The\ minimum\ desired\ list\ capacity.\r\n
comment4.params=
comment4.target=int\ size()
comment5.params=
comment5.target=boolean\ isEmpty()
comment6.params=element
comment6.target=boolean\ add(java.lang.Object)
comment7.params=index\ element
comment7.target=void\ add(int,\ java.lang.Object)
comment8.params=index
comment8.target=java.lang.Object\ get(int)
comment9.params=index\ element
comment9.target=java.lang.Object\ set(int,\ java.lang.Object)
numComments=13
