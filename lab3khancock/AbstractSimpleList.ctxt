#BlueJ class context
comment0.target=AbstractSimpleList
comment0.text=\r\n\ An\ abstract\ class\ for\ a\ class\ implementing\ a\ basic\ list\ in\ which\ the\ most\r\n\ important\ operations\ of\ the\ List\ interface\ are\ supported,\ but\ all\ others\ are\r\n\ not\ supported\ and\ result\ in\ errors\ if\ called.\ Dummy\ methods\ for\ unsupported\r\n\ operations\ are\ defined\ here.\ Classes\ that\ extend\ SimpleList\ must\ implement\r\n\ all\ of\ the\ remaining\ List\ methods\ not\ defined\ in\ this\ class.\ Note\ that\r\n\ subclasses\ *can*\ override\ and\ implement\ any\ of\ the\ methods\ defined\ here\ if\r\n\ they\ want\ to\ support\ them.\r\n\ \r\n\ @author\ Sean\ Barker\r\n\ @param\ <T>\r\n\ \ \ \ \ \ \ \ \ \ The\ type\ of\ object\ stored\ by\ the\ list.\r\n
comment1.params=o
comment1.target=boolean\ contains(java.lang.Object)
comment10.params=c
comment10.target=boolean\ removeAll(java.util.Collection)
comment11.params=c
comment11.target=boolean\ retainAll(java.util.Collection)
comment12.params=o
comment12.target=int\ indexOf(java.lang.Object)
comment13.params=o
comment13.target=int\ lastIndexOf(java.lang.Object)
comment14.params=
comment14.target=java.util.ListIterator\ listIterator()
comment15.params=index
comment15.target=java.util.ListIterator\ listIterator(int)
comment16.params=fromIndex\ toIndex
comment16.target=java.util.List\ subList(int,\ int)
comment17.params=c
comment17.target=void\ sort(java.util.Comparator)
comment2.params=
comment2.target=void\ clear()
comment3.params=
comment3.target=java.util.Iterator\ iterator()
comment4.params=
comment4.target=java.lang.Object[]\ toArray()
comment5.params=a
comment5.target=java.lang.Object[]\ toArray(java.lang.Object[])
comment6.params=o
comment6.target=boolean\ remove(java.lang.Object)
comment7.params=c
comment7.target=boolean\ containsAll(java.util.Collection)
comment8.params=c
comment8.target=boolean\ addAll(java.util.Collection)
comment9.params=index\ c
comment9.target=boolean\ addAll(int,\ java.util.Collection)
numComments=18
