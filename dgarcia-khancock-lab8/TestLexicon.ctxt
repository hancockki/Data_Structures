#BlueJ class context
comment0.target=TestLexicon
comment0.text=\r\n\ Program\ to\ test\ the\ functionality\ of\ the\ Lexicon\ implementation.\ Provides\ a\r\n\ simple\ text-based\ interface\ to\ operate\ on\ the\ lexicon\ and\ exercise\ its\r\n\ capabilities.\ You\ should\ not\ need\ to\ change\ this\ class.\r\n\ \r\n\ @author\ Sean\ Barker\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Runs\ a\ command\ loop\ allowing\ the\ user\ to\ enter\ commands\ until\ finished.\r\n
comment10.params=tokens
comment10.target=boolean\ invokeCmd(java.lang.String[])
comment10.text=\r\n\ Looks\ for\ a\ matching\ command\ in\ the\ list\ of\ available\ options\ and\ if\ found,\r\n\ executes\ the\ operation\ for\ that\ command.\r\n
comment11.params=commandTokens
comment11.target=void\ testAdd(java.lang.String[])
comment11.text=\r\n\ Adds\ the\ given\ word\ to\ the\ lexicon.\r\n
comment12.params=commandTokens
comment12.target=void\ testRemove(java.lang.String[])
comment12.text=\r\n\ Removes\ the\ given\ word\ from\ the\ lexicon.\r\n
comment13.params=commandTokens
comment13.target=void\ testContains(java.lang.String[])
comment13.text=\r\n\ Reports\ whether\ the\ given\ String\ is\ a\ prefix\ and\ a\ word\ within\ the\ lexicon.\r\n
comment14.params=commandTokens
comment14.target=void\ testReadFile(java.lang.String[])
comment14.text=\r\n\ Adds\ all\ words\ from\ the\ named\ file\ to\ the\ lexicon.\r\n
comment15.params=unused
comment15.target=void\ testIterator(java.lang.String[])
comment15.text=\r\n\ Prints\ all\ the\ words\ in\ the\ lexicon\ using\ the\ lexicon's\ iterator\r\n\ functionality.\r\n
comment16.params=commandTokens
comment16.target=void\ testSuggestions(java.lang.String[])
comment16.text=\r\n\ Prints\ out\ all\ the\ words\ from\ the\ lexicon\ that\ are\ within\ max\ distance\ of\r\n\ the\ target\ String.\ The\ args\ parameter\ is\ expected\ to\ be\ [target,\ dist].\r\n
comment17.params=commandTokens
comment17.target=void\ testRegex(java.lang.String[])
comment17.text=\r\n\ Prints\ out\ all\ the\ words\ from\ the\ lexicon\ that\ match\ the\ regular\ expression\r\n\ pattern.\r\n
comment2.params=commandTokens
comment2.target=void\ performOp(java.lang.String[])
comment3.params=commandTokens
comment3.target=void\ performOp(java.lang.String[])
comment4.params=commandTokens
comment4.target=void\ performOp(java.lang.String[])
comment5.params=commandTokens
comment5.target=void\ performOp(java.lang.String[])
comment6.params=commandTokens
comment6.target=void\ performOp(java.lang.String[])
comment7.params=commandTokens
comment7.target=void\ performOp(java.lang.String[])
comment8.params=commandTokens
comment8.target=void\ performOp(java.lang.String[])
comment9.params=commandTokens
comment9.target=void\ performOp(java.lang.String[])
numComments=18
